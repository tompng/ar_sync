javascript:
  ArSyncModel.load([
    {
      api: 'profile',
      query: ['sync_keys', 'name']
    },
    {
      api: 'Post',
      id: location.pathname.match(/\d+/)[0],
      query: [
        'sync_keys', 'title', 'body', 'reaction_summary', 'created_at',
        {
          user: ['sync_keys', 'name'],
          my_reaction: ['sync_keys', 'kind'],
          comments: [
            'sync_keys', 'body', 'reaction_summary',
            { my_reaction: ['sync_keys', 'kind'], user: ['sync_keys', 'name'] }
          ]
        }
      ]
    }
  ]).then(([userModel, postModel]) => {
    new Vue({ el: '#syncbody', data: { currentUser: userModel.data, post: postModel.data }})
  })


#syncbody [v-cloak]
  h1
    | {{post.title}}
    | &nbsp;
    a :href="'/posts/' + post.id + '/edit'" v-if='post.user.id == currentUser.id'
      i.material-icons edit
  p
    b
      | author:
      a :href="'/users/' + post.user.id"
        | {{post.user.name}}
      | &nbsp;&nbsp;date: {{post.created_at | date}}

  article
    | {{post.body}}
  reactions :url="'/posts/' + post.id + '/reaction'" :summary='post.reaction_summary' :mine='post.my_reaction' iconclass='material-icons-large'
  hr
  div style='margin-left: 50px'
    div v-for='comment in post.comments'
      p
        b
          a :href="'/users/' + comment.user.id"
            | {{comment.user.name}}
          | :&nbsp;
        span
          | {{comment.body}}
        | &nbsp;
        a :href="'/comments/' + comment.id"
          i.material-icons link
        span v-if='comment.user.id == currentUser.id'
          | &nbsp;
          a :href="'/comments/' + comment.id + '.json'" data-remote=true data-method='delete'
            i.material-icons clear
          | &nbsp;
          a :href="'/comments/' + comment.id + '/edit'"
            i.material-icons edit
      reactions :url="'/comments/' + comment.id + '/reaction'" :summary='comment.reaction_summary' :mine='comment.my_reaction'
      hr
    comment-form :post_id='post.id'
